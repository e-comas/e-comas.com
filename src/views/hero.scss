@use "../utils/variables" as *;

// html {
//   scroll-timeline: --page-scroll block;
// }

div.hero {
  position: relative;
  height: 20rem;
  width: 100%;
  margin: 0;
  display: grid;
  grid-template-rows: 1fr 1fr 1fr;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  padding: 0;
  text-align: center;

  h1 {
    margin: auto;
    text-transform: capitalize;
  }

  p {
    font-size: 1rem;
    width: 75%;
    margin: auto;
  }

  .cta {
    @extend %button;
    text-transform: capitalize;
    background-color: $gold;
    color: $grey;
    font-weight: bold;
    margin: auto;
    font-size: 0.75rem;
    &:hover {
      background-color: $grey;
      color: white;
    }
  }
}

$hero_zoom: 150%;
$hero_translate_y: 11%;
$hero_translate_x_start: 0;
$hero_translate_x_end_short: -200px;
$hero_translate_x_end_long: -900px;

div.hero::before {
  content: "";
  position: absolute;
  background-image: url("images/Earth_nopins.svg");
  background-size: auto 100%;
  background-position: center;
  background-repeat: no-repeat;
  margin: 0;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  opacity: 25%;

  transform: scale($hero_zoom) translateY($hero_translate_y)
    translateX($hero_translate_x_start);
  // animation: 1s linear forwards heroAnim_short;
  // animation-timeline: --page-scroll;
  z-index: -10;
}
// div.hero.long-page::before {
//   // transform: scale($hero_zoom) translateY($hero_translate_y)
//   //   translateX($hero_translate_x_start);
//   animation: 1s linear forwards heroAnim_long;
//   animation-timeline: --page-scroll;
// }

// @keyframes heroAnim_short {
//   from {
//     transform: scale($hero_zoom) translateY($hero_translate_y)
//       translateX($hero_translate_x_start);
//   }
//   to {
//     transform: scale($hero_zoom) translateY($hero_translate_y)
//       translateX($hero_translate_x_end_short);
//   }
// }

// @keyframes heroAnim_long {
//   from {
//     transform: scale($hero_zoom) translateY($hero_translate_y)
//       translateX($hero_translate_x_start);
//   }
//   to {
//     transform: scale($hero_zoom) translateY($hero_translate_y)
//       translateX($hero_translate_x_end_long);
//   }
// }
