@use "../utils/variables" as *;

$nav-width: 600px;
$logo-width: 200px;
$breakpoint: $nav-width + $logo-width + 20px;

$hamburgerThickness: 2px;

header {
  display: grid;
  @media screen and (min-width: $breakpoint) {
    grid-template-columns: 1fr minmax(auto, $nav-width);
  }
  grid-template-rows: auto 1fr;
  padding: 2rem;
  gap: 1rem;

  height: 50vh;
  min-height: 500px;

  .background * {
    object-position: 0 25%;
  }

  .logo {
    position: relative;
    z-index: 20;
    width: $logo-width;
    min-width: $logo-width / 2;
    max-width: 50vw;
    filter: brightness(0) invert(1);
  }

  nav {
    display: flex;
    justify-content: center;
    gap: 1rem;
    align-items: center;

    @media screen and (min-width: $breakpoint) {
      justify-content: space-between;
      gap: unset;
    }

    a {
      @extend %uppercase;
      color: $white;
      text-decoration: none;

      &:hover,
      &.active {
        color: $green;
      }
    }
    ul {
      display: none;
      position: absolute;
      z-index: 1;
      list-style: none;
      flex-direction: column;
      gap: 1em;
      padding-top: 1em;
      margin: 0;
    }
    & > div:hover > ul {
      display: flex;
    }
    & > :last-child {
      @extend %button;
      &:hover,
      &.active {
        @extend %invertedCta;
      }
    }
  }

  details {
    display: none;

    @media screen and (max-width: $breakpoint) {
      display: unset;
      z-index: 20;

      & + nav,
      %hamburger {
        transition: transform 300ms;
        transform-origin: right;
      }

      summary {
        list-style: none;
        &::-webkit-details-marker {
          display: none;
        }

        @extend %hamburger;

        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        height: 1rem;
        width: 1rem;
        margin-left: auto;

        cursor: pointer;

        border-top: $hamburgerThickness solid $white;

        &::before,
        &::after {
          @extend %hamburger;
          content: "";
          border-bottom: $hamburgerThickness solid $white;
          width: 100%;
          height: $hamburgerThickness;
        }
        &::before {
          transform: translateY(-0.5px);
          transition-property: opacity, transform;
        }
      }

      &[open] > summary {
        transform: rotate(-45deg);
        transform-origin: right;
        &::before {
          opacity: 0;
          transform: rotate(45deg)
            translate(-#{$hamburgerThickness}, #{$hamburgerThickness});
        }
        &::after {
          transform: translateX(-50%) translateY(-3px) rotate(90deg);
          transform-origin: right;
        }
      }

      & + nav {
        position: fixed;
        flex-direction: column;
        padding: 2rem;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: $green;
        transform: translateX(100%);
        text-align: center;
        z-index: 10;
        transition-property: background-color, transform;

        a,
        a.active {
          color: $blue;
        }
        ul {
          display: flex;
          position: relative;
        }
        & > :last-child {
          @include invertedCta();
        }
      }
      &[open] + nav {
        transform: none;
      }
    }
  }

  h1 {
    grid-column: span 2;
    color: $white;
    max-width: 800px;
    align-self: center;
  }

  @media screen and (min-width: #{$max-width + 100px}) {
    grid-template-columns: auto minmax(auto, #{$max-width - $nav-width}) $nav-width auto;
    column-gap: 0;
    & > a {
      grid-column: 2;
    }
    h1 {
      grid-column: 2 / 4;
    }
  }
}
