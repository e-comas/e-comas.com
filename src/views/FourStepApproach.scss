@use "../utils/variables" as *;

$gap: 1.2rem;

.FourStepApproach-shape path {
  stroke: var(--accent-color);
  stroke-dasharray: var(--dash-array);
  // animation: dash 5s linear;
  &.circle-arc {
    --dash-array: 1376;
  }
  &.arrow-stick {
    --dash-array: 280;
  }
  &.arrow-branches {
    stroke: none;
    fill: var(--accent-color);
  }
}

@keyframes dash {
  from {
    stroke-dashoffset: var(--dash-array);
  }
  to {
    stroke-dashoffset: 0;
  }
}

section.four-step {
  display: flex;
  flex-direction: column;
  gap: $gap;
  padding: 5rem $gap;
  max-width: $max-width;
  margin: 0 auto;

  h2 {
    text-transform: uppercase;
    font-weight: 600;
  }

  h3 {
    &::before {
      content: counter(four-step-approach) ". ";
    }
    &,
    & strong {
      text-transform: uppercase;
      font-weight: 600;
      font-size: 1.1rem;
      letter-spacing: 0;
      line-height: 1.5rem;
    }
  }

  ol {
    display: none;
  }

  strong {
    text-transform: uppercase;
  }

  & > div {
    display: flex;
    flex-direction: column;
    gap: $gap;
    padding: 0rem;

    &:first-of-type {
      counter-reset: four-step-approach;
    }

    ul {
      list-style: none;
      margin: 0;
      padding: 0;
      & > li {
        &::before {
          content: "- ";
        }
        font-size: 0.9rem;
        letter-spacing: 0;
        line-height: 1.3rem;
        strong {
          text-transform: unset;
          font-weight: inherit;
        }
      }
    }

    .cta {
      background-color: var(--accent-color);
    }
  }

  & > div,
  & > ol > * {
    counter-increment: four-step-approach;
    &:nth-of-type(1) {
      --accent-color: #fed140;
    }
    &:nth-of-type(2) {
      --accent-color: #e3d654;
    }
    &:nth-of-type(3) {
      --accent-color: #a3d487;
    }
    &:nth-of-type(4) {
      --accent-color: #69d5bd;
    }
  }

  @media screen and (min-width: 900px) {
    display: grid;
    position: relative;
    grid-template-columns: repeat(4, 1fr);
    row-gap: 3rem;
    h2 {
      position: absolute;
      top: 22.5rem;
      right: 50%;
      transform: translateX(50%);
      text-align: center;
      width: min-content;
    }
    ol {
      display: grid;
      grid-column: span 4;
      margin: 0 auto;

      animation: fadeIn 500ms; // To avoid flashing when the page loads.

      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
      grid-template-areas: "empty0 strategy empty1" "conversion title operations" "empty2 traffic empty3";
      counter-reset: four-step-approach;

      & > :nth-child(1) {
        grid-area: strategy;
        svg {
          transform: rotate(0.25turn);
        }
      }
      & > :nth-child(2) {
        grid-area: operations;
        svg {
          transform: rotate(0.5turn) translate(55px, -3px);
        }
      }
      & > :nth-child(3) {
        grid-area: traffic;
        svg {
          transform: rotate(0.75turn) translate(55px, -2.5rem);
        }
      }
      & > :nth-child(4) {
        grid-area: conversion;
      }

      & > * {
        position: relative;

        display: flex;
        gap: 0.5rem;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        height: 15rem;
        width: 15rem;
        font-size: 1.5rem;
        padding: 2.5rem;
        text-align: center;
      }
      svg {
        position: absolute;
        top: 0;
        left: 0;
        width: calc(100% + 2.5rem);
        transform: translate(5px, -2.5rem);
      }
      img {
        height: 1.5em;
        width: auto;
      }
      span {
        &::before {
          content: counter(four-step-approach) ". ";
        }
        text-transform: uppercase;
        line-height: 1.1em;
      }
    }
    .cta {
      margin-top: auto;
    }
  }
  @media screen and(min-width:#{$max-width+$body-padding}) {
    padding-left: 0;
    padding-right: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
